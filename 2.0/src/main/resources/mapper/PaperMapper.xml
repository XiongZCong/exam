<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.xzc.mapper.PaperMapper">

    <resultMap id="PaperBefore" type="com.xzc.model.Paper">
        <id property="paperId" column="paperId"/>
        <result property="paperName" column="paperName"/>
        <result property="userId" column="userId"/>
        <result property="beginTime" column="beginTime"/>
        <result property="endTime" column="endTime"/>
        <result property="note" column="note"/>
        <collection property="questions" ofType="com.xzc.model.Question">
            <id property="questionId" column="questionId"/>
            <result property="questionName" column="questionName"/>
            <result property="answerA" column="answerA"/>
            <result property="answerB" column="answerB"/>
            <result property="answerC" column="answerC"/>
            <result property="answerD" column="answerD"/>
            <result property="score" column="score"/>
            <result property="type" column="type"/>
        </collection>
    </resultMap>

    <resultMap id="PaperAfter" type="com.xzc.model.Paper">
        <id property="paperId" column="paperId"/>
        <result property="paperName" column="paperName"/>
        <result property="userId" column="userId"/>
        <result property="beginTime" column="beginTime"/>
        <result property="endTime" column="endTime"/>
        <result property="note" column="pnote"/>
        <collection property="questions" ofType="com.xzc.model.Question">
            <id property="questionId" column="questionId"/>
            <result property="questionName" column="questionName"/>
            <result property="answerA" column="answerA"/>
            <result property="answerB" column="answerB"/>
            <result property="answerC" column="answerC"/>
            <result property="answerD" column="answerD"/>
            <result property="questionAnswer" column="questionAnswer"/>
            <result property="score" column="score"/>
            <result property="type" column="type"/>
            <result property="note" column="note"/>
        </collection>
    </resultMap>

    <resultMap id="TestMap" type="com.xzc.model.Test">
        <id property="testId" column="testId"/>
        <result property="paperId" column="paperId"/>
        <result property="userId" column="userId"/>
        <result property="score" column="score"/>
        <result property="putinTime" column="putinTime"/>
        <result property="note" column="note"/>
        <collection property="testItems" ofType="com.xzc.model.TestItem">
            <id property="testItemId" column="testItemId"/>
            <result property="questionId" column="questionId"/>
            <result property="myAnswer" column="myAnswer"/>
        </collection>
    </resultMap>

    <select id="selectPaperBeforeById" parameterType="long" resultMap="PaperBefore">
      SELECT p.*,q.*
        FROM t_paper p
          INNER JOIN t_question q ON q.paperId = p.paperId
        WHERE p.paperId = #{paperId}
    </select>

    <select id="selectPaperAfterById" parameterType="long" resultMap="PaperAfter">
      SELECT p.paperId,p.paperName,p.userId,p.beginTime,p.endTime,p.note 'pnote',q.*
        FROM t_paper p
          INNER JOIN t_question q ON q.paperId = p.paperId
        WHERE p.paperId = #{paperId}
    </select>

    <select id="selectTestById" parameterType="long" resultMap="TestMap">
      SELECT t.*,i.*
        FROM t_test t
          INNER JOIN t_testItem i ON i.testId = t.testId
        WHERE t.testId = #{testId}
    </select>

    <insert id="insertPaper" parameterType="Paper" useGeneratedKeys="true" keyProperty="paperId">
        INSERT INTO t_paper (paperName,userId,beginTime,endTime,note)
        VALUES (#{paperName},#{userId},#{beginTime},#{endTime},#{note})
    </insert>

    <insert id="insertQuestion" parameterType="java.util.List">
        INSERT INTO t_question (paperId,score,type,questionName,answerA,answerB,answerC,answerD,questionAnswer,note) VALUES
        <!-- foreach的语法,集合直接写list字符串，用item表示当前遍历的对象，结果集合通过使用逗号分隔使用separator属性 -->
        <foreach collection="list" item="item" separator=",">
            (#{item.paperId},#{item.score},#{item.type},#{item.questionName},#{item.answerA},#{item.answerB},#{item.answerC},#{item.answerD},#{item.questionAnswer},#{item.note})
        </foreach>
    </insert>

    <insert id="insertTest" parameterType="Test" useGeneratedKeys="true" keyProperty="testId">
        INSERT INTO t_test (paperId,userId,score,putinTime,note)
        VALUES (#{paperId},#{userId},#{score},#{putinTime},#{note})
    </insert>

    <insert id="insertTestItem" parameterType="java.util.List">
        INSERT INTO t_testItem (questionId,myAnswer,testId) VALUES
        <!-- foreach的语法,集合直接写list字符串，用item表示当前遍历的对象，结果集合通过使用逗号分隔使用separator属性 -->
        <foreach collection="list" item="item" separator=",">
            (#{item.questionId},#{item.myAnswer},#{item.testId})
        </foreach>
    </insert>

</mapper>